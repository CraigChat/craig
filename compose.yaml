version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Containerfile
      args:
        - CLIENT_ID=${CLIENT_ID}
        - CLIENT_SECRET=${CLIENT_SECRET}
        - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
        - DISCORD_APP_ID=${DISCORD_APP_ID}
        - DEVELOPMENT_GUILD_ID=${DEVELOPMENT_GUILD_ID}
    stdin_open: true
    tty: true
    ports:
      - "8080:8080"
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_APP_ID=${DISCORD_APP_ID}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - DEVELOPMENT_GUILD_ID=${DEVELOPMENT_GUILD_ID}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
      - DATABASE_NAME=craig
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - NODE_VERSION=18.18.2
      - NODE_ENV=production
      - DOWNLOAD_DOMAIN=localhost:8080
      - REDIS_START_TIMEOUT_S=30
      - POSTGRESQL_START_TIMEOUT_S=60
    depends_on:
      - redis
      - postgres
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-craig}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
